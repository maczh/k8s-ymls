#Kubernetes中的Role是一种API对象，用于定义一组对Kubernetes资源的访问权限。Role可以被绑定到特定的命名空间上，从而授予该命名空间内的用户或服务账户对该命名空间中的资源的访问权限。Role的作用是定义一组对Kubernetes资源的访问权限，从而控制用户或服务账户对这些资源的访问。
#Role的使用场景包括但不限于以下几个方面：
#1. 授权管理：Role可以用于授权管理，例如将Role绑定到特定的用户、服务账户或组上，从而授予它们对Kubernetes资源的访问权限。
#2. 多租户管理：Role可以用于多租户管理，例如将Role绑定到特定的命名空间上，从而授予该命名空间内的用户或服务账户对该命名空间中的资源的访问权限。
#3. 安全管理：Role可以用于安全管理，例如将Role绑定到特定的服务账户上，从而授予它们对Kubernetes资源的访问权限，并限制其他用户的访问权限。
apiVersion: rbac.authorization.k8s.io/v1    #版本号，固定值
kind: Role                                  #资源类型，固定值
metadata:                                   #元数据
  name: my-role                             #名称
rules:                                      #包含了这个 Role 的所有 PolicyRule
- apiGroups: [""]                           #apiGroups 是包含资源的 apiGroup 的名称。 如果指定了多个 API 组，则允许针对任何 API 组中的其中一个枚举资源来请求任何操作。 "" 表示核心 API 组，“*” 表示所有 API 组
  resources: ["pods","services","deployments","configmaps","secrets","nodes","persistentvolumes","namespaces"]                       #resources 是此规则所适用的资源的列表。“*” 表示所有资源。
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]  #verbs 是适用于此规则中所包含的所有 ResourceKinds 的动作。 “*” 表示所有动作
  resourceNames: []                         #此规则所适用的资源名称白名单，可选。 空集合意味着允许所有资源。
  nonResourceURLs: []                       #nonResourceURLs 是用户应有权访问的一组部分 URL。 允许使用 “*”，但仅能作为路径中最后一段且必须用于完整的一段， 因为非资源 URL 没有划分命名空间。 此字段仅适用于从 RoleBinding 引用的 Role。 rules 可以应用到 API 资源（如 “pod” 或 “secret”）或非资源 URL 路径（如 “/api”）， 但不能同时应用于两者。