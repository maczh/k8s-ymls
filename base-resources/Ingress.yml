#  Kubernetes中的Ingress是一种API对象，用于管理外部流量的访问。Ingress可以将外部流量路由到Kubernetes集群中的不同服务，支持多种路由规则和负载均衡算法。
#    Ingress的使用场景包括但不限于以下几个方面：
#    1. 外部流量管理：Ingress可以用于管理外部流量的访问，将外部请求路由到不同的服务中。
#    2. 路由规则：Ingress支持多种路由规则，例如基于主机名、路径、HTTP方法等的路由规则。
#    3. SSL终止：Ingress可以用于SSL终止，将SSL/TLS流量解密并将其转发到后端服务。
#    4. 负载均衡：Ingress支持多种负载均衡算法，例如轮询、IP散列、最少连接等算法。
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: open-gate-ingress
  namespace: opencloud
  labels:
    app: api-gate
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2                    # 路径重回
    nginx.ingress.kubernetes.io/ssl-redirect: "false"                    # 同时支持 HTTP 和 HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-verify: off                  # 启用或禁用对代理HTTPS服务器证书的验证
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"      # 服务器应优先于客户端
    nginx.ingress.kubernetes.io/proxy-ssl-verify-depth: "1"              # 设置代理HTTPS服务器证书链中的验证深度，默认为1
    nginx.ingress.kubernetes.io/proxy-ssl-protocols:                   # 启用对代理HTTPS服务器的请求的指定协议。
    nginx.ingress.kubernetes.io/proxy-body-size: "50M"                 # 代理文件大小限制 M
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 300             # 代理超时 ms
    nginx.ingress.kubernetes.io/proxy-read-timeout: 300               # 代理读取超时 ms
    nginx.ingress.kubernetes.io/proxy-send-timeout: 300                # 代理发送超时 ms
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "1024M"      # 代理最大文件大小
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: 300       # 代理下一个上游超时 ms
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: 300         # 代理下一个上游尝试 ms
    nginx.ingress.kubernetes.io/proxy-request-buffering: 300           # 代理请求缓冲 ms
spec: #Ingress的规格定义
  #  defaultBackend:                                                       #defaultBackend 是负责处理与任何规则都不匹配的请求的后端。 如果未指定 rules，则必须指定 defaultBackend。 如果未设置 defaultBackend，则不符合任何 rules 的请求的处理将由 Ingress 控制器决定
  #    resource:                                                           #resource 是对 Ingress 对象所在命名空间中另一个 Kubernetes 资源的引用。 如果指定了 resource，则不得指定 service.name 和 service.port。 此字段是一个与 service 互斥的设置
  #      kind: Service                                                     #资源类型
  #      name: opencloud-base-core                                         #资源名称
  #      apiGroup:                                                         #是被引用资源的组。如果不指定 APIGroup，则指定的 Kind 必须在核心 API 组中。对于任何其它第三方类型，都需要 APIGroup
  #    service:                                                            #引用一个 Service 作为后端。此字段是一个与 resource 互斥的设置
  #      name: opencloud-base-core                                         #服务名称
  #      port:                                                             #服务端口设置
  #        name: opencloud-base-core-svc-port                              #服务上的端口名称。此字段是一个与 number 互斥的设置
  #        number: 8522                                                    #服务上的数字形式端口号（例如 80）。此字段是一个与 name 互斥的设置
  ingressClassName: kubernetes.io/ingress.class                            #ingressClassName 是 IngressClass 集群资源的名称。 Ingress 控制器实现使用此字段来了解它们是否应该通过传递连接（控制器 -> IngressClass -> Ingress 资源）为该 Ingress 资源提供服务。尽管 kubernetes.io/ingress.class 注解（简单的常量名称）从未正式定义， 但它被 Ingress 控制器广泛支持，以在 Ingress 控制器和 Ingress 资源之间创建直接绑定。 新创建的 Ingress 资源应该优先选择使用该字段。但是，即使注解已被正式弃用， 出于向后兼容性的原因，Ingress 控制器仍应能够处理该注解（如果存在）
  rules: #反向代理规则列表
  - host: "*.opencloud.flamecloud.cn"                                     #匹配的host主机名，可以是子域名或泛域名，相当于nginx中的serverName
    http:
      paths: #匹配路径清单
      - path: /api/v1                                                   #path 要与传入请求的路径进行匹配。 目前，它可以包含 RFC 3986 定义的 URL 的常规 “路径” 部分所不允许的字符。 路径必须以 “/” 开头，并且在 pathType 值为 “Exact” 或 “Prefix” 时必须存在
        pathType: Prefix                                                #决定如何解释 path 匹配:Exact-完全匹配 Prefix-前缀匹配 ImplementationSpecific-路径匹配的解释取决于 IngressClass
        backend: #定义将流量转发到的引用服务端点。
          service: #转发到Service服务
            name: opencloud-base-core-svc                               # 绑定 serviceName
            port: 8525                                                  # 服务暴露的端口
      - path: /images
        pathType: ImplementationSpecific
        backend:
          resource:                                                   #转发到资源定义，对 Ingress 对象所在命名空间中另一个 Kubernetes 资源的引用。 如果指定了 resource，则不得指定 service.name 和 service.port。 此字段是一个与 service 互斥的设置
            apiGroup: k8s.example.com                                 #资源的APIGroup
            kind: StorageBucket                                       #资源类型
            name: opencloud-image                                     #资源名称
  tls:                                                                # 开启绑定 ssl
  - hosts:                                                            #TLS 证书中包含的主机列表。 此列表中的值必须与 tlsSecret 中使用的名称匹配。 默认为实现此 Ingress 的负载均衡控制器的通配符主机设置（如果未指定
    - api.opencloud.flamecloud.cn
    secretName: all-drifter-com                                       #用于终止端口 443 上 TLS 通信的 Secret 的名称

